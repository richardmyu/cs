'''
电信号段：133/153/180/181/189/177
联通号段：130/131/132/155/156/185/186/145/176
移动号段：134/135/136/137/138/139/150/151/152/157/158/159/182/183/184/187/188/147/178
'''

import re


def main():
    # 创建正则表达式对象 使用了前瞻和回顾来保证手机号前后不应该出现数字
    # pattern = re.compile(r'(?<=\D)1[34578]\d{9}(?=\D)')
    # pattern = re.compile(
    #     r'(?<=\D)13\d{9}|14[57]\d{8}|15[^4]\d{8}|17[678]\d{8}|18\d{9}(?=\D)'
    # )
    pattern = re.compile(
        r'(?<=\D)(?:(?:13\d|18\d)|(?:14[57]|15[^4]|17[678]))\d{8}(?=\D)'
    )
    sentence = '''
    总之14567894516，15467894516 想要用原始字符串只输出\几乎是不可能的，17772337500这也是不推荐大家在正则表达式以外的地方使用原始字符串的原因17686516497。我们可以简单理解为原始字符串是正则表达式中为了简化而专用的字符串形式 13145301320。在正则式以外的地方能避免原始字符串带来的歧义就尽量不用。
    '''
    # 查找所有匹配并保存到一个列表中
    mylist = re.findall(pattern, sentence)
    print(mylist)

    print('--------华丽的分隔线--------')

    # 通过迭代器取出匹配对象并获得匹配的内容
    for temp in pattern.finditer(sentence):
        print(temp.group())

    print('--------华丽的分隔线--------')
    # 通过search函数指定搜索位置找出所有匹配
    m = pattern.search(sentence)

    while m:
        print(m.group())
        m = pattern.search(sentence, m.end())


if __name__ == '__main__':
    main()
