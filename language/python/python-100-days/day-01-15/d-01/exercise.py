# !/usr/bin/env python
# coding= utf-8
'''
Date           : 2023-01-15 22:05:43
Description    :

'''

from turtle import *
import turtle

def print_the_zen_of_python():
    """_print the zen of python_
    """
    print(
        """
        Beautiful is better than ugly.
        优美优于丑陋。
        """
    )

    print(
        """
        Explicit is better than implicit.
        明了优于隐晦。
        """
    )

    print(
        """
        Simple is better than complex.
        简洁优于复杂。
        """
    )

    print(
        """
        Complex is better than complicated.
        复杂优于混乱。
        """
    )

    print(
        """
        Flat is better than nested.
        扁平优于嵌套。
        """
    )

    print(
        """
        Sparse is better than dense.
        间隔优于紧凑。
        """
    )

    print(
        """
        Readability counts.
        可读性很重要。
        """
    )

    print(
        """
        Special cases aren't special enough to break the rules.
        特殊情况也不应该违反这些规则。
        """
    )

    print(
        """
        Although practicality beats purity.
        但现实往往并不那么完美。
        """
    )

    print(
        """
        Errors should never pass silently.
        异常不应该被静默处理。
        """
    )

    print(
        """
        Unless explicitly silenced.
        除非你希望如此。
        """
    )

    print(
        """
        In the face of ambiguity, refuse the temptation to guess.
        遇到模棱两可的地方，不要胡乱猜测。
        """
    )

    print(
        """
        There should be one-- and preferably only one --obvious way to do it.
        肯定有一种通常也是唯一一种最佳的解决方案。
        """
    )

    print(
        """
        Although that way may not be obvious at first unless you're Dutch.
        虽然这种方案并不是显而易见的，因为你不是那个荷兰人[这里指的是 Python 之父 Guido]。
        """
    )

    print(
        """
        Now is better than never.
        现在开始做比不做好。
        """
    )

    print(
        """
        Although never is often better than *right* now.
        不做比盲目去做好 [极限编程中的 YAGNI 原则]。
        """
    )

    print(
        """
        If the implementation is hard to explain, it's a bad idea.
        如果一个实现方案难于理解，它就不是一个好的方案。
        """
    )

    print(
        """
        If the implementation is easy to explain, it may be a good idea.
        如果一个实现方案易于理解，它很有可能是一个好的方案。
        """
    )

    print(
        """
        Namespaces are one honking great idea -- let's do more of those!
        命名空间非常有用，我们应当多加利用！
        """
    )


# 2.学习使用 turtle 在屏幕上绘制图形


def draw_doraemon_nobita():
    speed(10)

    # doraemon
    penup()
    seth(180)
    fd(200)
    seth(0)
    penup()  # 外圈头
    circle(150, 40)
    pendown()
    fillcolor('dodgerblue')
    begin_fill()
    circle(150, 280)
    end_fill()  # 外圈头
    fillcolor("red")
    begin_fill()  # 外圈头
    seth(0)  # 项圈
    fd(200)
    circle(-5, 90)
    fd(10)
    circle(-5, 90)
    fd(210)
    circle(-5, 90)
    fd(10)
    circle(-5, 90)
    end_fill()  # 项圈
    fd(183)  # 右脸
    left(45)
    fillcolor("white")
    begin_fill()
    circle(120, 100)
    seth(90)  # 眼睛
    a = 2.5

    for i in range(120):
        if 0 <= i < 30 or 60 <= i < 90:
            a -= 0.05
            lt(3)
            fd(a)
        else:
            a += 0.05
            lt(3)
            fd(a)

    penup()
    seth(180)
    fd(60)
    pendown()
    seth(90)

    for i in range(120):
        if 0 <= i < 30 or 60 <= i < 90:
            a -= 0.05
            lt(3)
            fd(a)
        else:
            a += 0.05
            lt(3)
            fd(a)  # 眼睛

    seth(180)
    penup()
    fd(60)
    pendown()
    seth(215)
    circle(120, 100)
    end_fill()  # 脸部颜色和眼睛部分
    seth(0)  # 左眼珠部分
    penup()
    fd(40)
    seth(90)
    fd(170)
    seth(0)
    fd(5)
    pendown()
    fillcolor("black")
    begin_fill()
    circle(15, 360)
    end_fill()
    seth(90)
    penup()
    fd(5)
    pendown()
    seth(0)
    fillcolor("white")
    begin_fill()
    circle(4, 360)
    end_fill()  # 左眼珠部分
    penup()  # 右眼珠
    seth(0)
    fd(58)
    seth(270)
    fd(15)
    seth(0)
    pensize(5)
    circle(18, 90)
    pendown()
    circle(18, 180)
    penup()
    circle(18, 90)
    pendown()
    pensize(1)  # 右眼珠
    penup()  # 鼻子
    seth(270)
    fd(7)
    seth(180)
    fd(27)
    pendown()
    fillcolor("red")
    begin_fill()
    circle(20)
    end_fill()  # 鼻子
    seth(270)  # 嘴
    penup()
    fd(40)
    pendown()
    pencolor("black")
    pensize(2)
    fd(90)
    seth(0)
    circle(120, 50)
    penup()
    circle(120, 260)
    pendown()
    circle(120, 50)  # 嘴
    penup()  # 胡须
    seth(90)
    fd(60)
    seth(0)
    fd(20)
    pendown()
    fd(60)
    penup()
    fd(-60)
    seth(90)
    fd(20)
    pendown()
    seth(15)
    fd(60)
    penup()
    fd(-60)
    seth(270)
    fd(40)
    pendown()
    seth(-15)
    fd(50)
    penup()
    fd(-50)
    seth(180)
    fd(40)
    pendown()
    seth(-165)
    fd(50)
    penup()
    fd(-50)
    seth(90)
    fd(40)
    seth(165)
    pendown()
    fd(60)
    fd(-60)
    penup()
    seth(280)
    fd(20)
    seth(180)
    pendown()
    fd(60)  # 胡须
    penup()  # 下半身
    home()
    penup()
    seth(180)
    fd(200)
    seth(0)
    seth(90)
    fd(36)
    seth(0)
    fd(98)
    pendown()
    fillcolor("dodgerblue")
    begin_fill()
    seth(50)
    fd(70)
    seth(40)
    fd(20)
    right(90)
    fd(35)
    right(75)
    fd(105)
    seth(90)
    fd(10)
    seth(-90)
    fd(90)
    seth(-95)
    fd(80)
    seth(180)
    fd(80)  # 右腿
    penup()  # 左腿和过渡
    fd(30)
    seth(-90)
    fd(30)
    seth(0)
    circle(30, 90)
    pendown()
    circle(30, 180)
    penup()
    circle(30, 90)
    seth(90)
    fd(30)
    seth(180)
    fd(30)
    pendown()
    fd(80)  # 腿
    seth(92)
    fd(80)
    seth(90)
    fd(75)
    fd(-30)
    seth(-135)
    fd(30)
    right(90)
    fd(40)
    right(93)
    fd(78)
    seth(0)
    fd(205)
    end_fill()
    fillcolor("red")  # 项圈的补充
    begin_fill()
    circle(5, 90)
    fd(10)
    circle(5, 90)
    fd(10)
    end_fill()
    penup()
    seth(50)
    fd(70)
    seth(40)
    fd(16)
    right(90)
    fd(20)
    pendown()
    fillcolor("white")  # 手掌
    begin_fill()
    circle(30)
    end_fill()
    penup()
    seth(-90)
    fd(253)
    seth(180)
    fd(160)
    seth(-90)
    fd(30)
    seth(0)
    pendown()
    fillcolor("white")
    begin_fill()
    penup()
    circle(31, 90)
    pendown()
    circle(31, 180)
    penup()
    circle(31, 90)
    end_fill()
    seth(90)
    fd(30)
    seth(0)
    fd(24)
    pendown()
    seth(180)
    circle(15, 180)  # 脚
    fd(90)
    circle(15, 180)
    fd(90)
    penup()
    seth(180)
    fd(60)
    penup()
    seth(0)
    pendown()
    circle(-15, 180)
    fd(80)
    circle(-15, 180)
    fd(80)
    penup()
    seth(180)
    fd(140)
    seth(90)
    fd(90)
    seth(-45)
    pendown()
    fillcolor("white")
    begin_fill()
    circle(30)
    end_fill()
    penup()
    seth(-90)
    fd(50)
    seth(0)
    fd(173)
    seth(0)
    fillcolor("white")  # 胸
    begin_fill()
    pendown()
    circle(90, 128)
    seth(180)
    fd(145)
    seth(-128)
    circle(90, 129)
    end_fill()
    seth(90)
    penup()
    fd(35)
    seth(0)
    pendown()
    circle(70, 90)  # 口袋
    seth(180)
    fd(140)
    seth(-90)
    circle(70, 90)
    penup()
    seth(90)
    fd(90)
    pendown()
    seth(0)
    fillcolor("#ffd200")  # 铃铛
    begin_fill()
    circle(20)
    end_fill()
    seth(90)
    pensize(2)
    fd(13)
    fillcolor("black")
    begin_fill()
    seth(0)
    circle(2)
    end_fill()
    seth(-90)
    fd(13)
    seth(0)
    penup()
    circle(20, 110)
    pendown()
    seth(170)
    fd(20)
    seth(190)
    fd(20)
    penup()
    seth(-90)
    fd(3.5)
    pendown()
    seth(10)
    fd(20)
    seth(-10)
    fd(22)

    # nobita
    pensize(1)
    penup()
    seth(0)
    fd(400)
    pendown()
    fillcolor("black")
    begin_fill()
    seth(30)
    circle(100, 60)
    fd(20)  # 右脸
    seth(50)
    circle(50, 150)
    seth(70)
    fd(4)
    seth(50)
    fd(4)
    fd(-4)
    seth(70)
    fd(-4)
    seth(145)
    fd(5)
    seth(138)
    fd(5)
    fd(-5)
    seth(145)
    fd(-5)
    seth(150)
    circle(60, 150)
    seth(-90)
    fd(20)
    circle(84, 92)
    end_fill()
    penup()
    seth(90)
    fd(110)
    seth(0)
    fd(50)
    fillcolor("#FFF8DC")
    begin_fill()
    pendown()  # 发际线
    seth(85)
    fd(20)
    seth(160)
    fd(20)
    seth(165)
    fd(20)
    seth(170)
    fd(10)
    seth(175)
    fd(20)
    seth(180)
    fd(10)
    seth(185)
    fd(20)
    seth(190)
    fd(20)
    seth(195)
    fd(10)
    seth(200)
    fd(14.5)
    seth(-85)
    fd(30)  # 发际线
    seth(-90)
    fd(20)
    circle(84, 92)
    seth(30)
    circle(100.5, 60)
    fd(30)
    end_fill()  # 脸的补全
    penup()
    seth(-90)
    fd(10)
    pendown()
    fillcolor("#FFF8DC")
    begin_fill()
    seth(80)
    circle(-8, 190)
    seth(-90)
    fd(5)
    seth(-95)
    fd(5)
    seth(-100)
    fd(5)
    seth(-105)
    fd(5)
    seth(-110)
    fd(5)
    circle(-8, 135)
    penup()
    seth(90)
    fd(15)
    seth(0)
    fd(3)
    pendown()

    seth(60)
    fd(8)
    seth(70)
    fd(8)
    fd(-8)
    seth(70)
    circle(-5, 180)
    seth(-120)
    fd(14)
    end_fill()
    penup()
    seth(180)
    fd(142)
    seth(90)
    fd(23)
    pendown()
    fillcolor("#FFF8DC")
    begin_fill()
    seth(100)
    circle(8, 180)
    seth(-90)
    fd(6)
    seth(-85)
    fd(6)
    seth(-80)
    fd(6)
    circle(8, 140)
    end_fill()
    seth(100)
    fd(20)
    circle(5, 210)
    fd(7)
    penup()
    seth(0)
    fd(142)
    seth(90)
    fd(9)
    pendown()
    seth(180)
    fd(18)
    seth(90)
    fillcolor("white")
    begin_fill()
    a = 2.3
    for i in range(120):
        if 0 <= i < 30 or 60 <= i < 90:
            a -= 0.05
            lt(3)
            fd(a)
        else:
            a += 0.05
            lt(3)
            fd(a)

    penup()
    seth(180)
    fd(50)
    seth(90)
    pendown()
    for i in range(120):
        if 0 <= i < 30 or 60 <= i < 90:
            a -= 0.05
            lt(3)
            fd(a)
        else:
            a += 0.05
            lt(3)
            fd(a)
    end_fill()
    seth(180)
    penup()
    fd(70)
    pendown()
    seth(0)
    fd(20)
    penup()
    fd(34)
    seth(-90)
    fd(2)
    pendown()
    pensize(6)
    circle(4)
    penup()
    seth(0)
    fd(26)
    seth(-90)
    fd(2.5)
    seth(0)
    pendown()
    circle(4)
    pensize(2)
    penup()
    seth(90)
    fd(40)
    seth(0)
    fd(15)
    seth(30)
    pendown()
    fd(8)
    seth(0)
    fd(10)
    seth(-40)
    fd(15)
    seth(-50)
    fd(7)
    seth(-60)
    fd(7)
    penup()
    seth(180)
    fd(95)
    seth(90)
    fd(25)
    pendown()
    seth(-145)
    fd(10)
    seth(-135)
    fd(5)
    seth(-125)
    fd(5)
    seth(-120)
    fd(5)
    seth(-115)
    fd(5)
    seth(-110)
    fd(5)
    penup()
    seth(90)
    fd(30)
    seth(0)
    fd(25)
    pendown()
    seth(-30)
    fd(19)
    penup()
    pensize(1)
    seth(0)
    fd(13)
    seth(-90)
    fd(81)
    seth(0)
    pendown()
    circle(8)
    penup()
    seth(-90)
    fd(20)
    seth(180)
    fd(10)
    seth(160)
    pendown()
    fd(25)
    fd(-25)
    seth(-15)
    fd(5)
    seth(-10)
    fd(5)
    seth(0)
    fd(5)
    seth(10)
    fd(5)
    seth(15)
    fd(5)
    seth(20)
    fd(27)
    seth(-90)
    penup()
    fd(25)
    seth(180)
    fd(36)
    seth(0)
    pendown()
    fillcolor("white")
    begin_fill()
    circle(68.5, 75)
    seth(-105)
    circle(-68.5, 75)
    circle(-72.5, 78)
    penup()
    seth(-90)
    fd(100)
    seth(0)
    fd(133)
    seth(90)
    fd(85)
    end_fill()
    fillcolor("#FFF8DC")
    begin_fill()
    seth(-160)
    fd(104)
    seth(0)
    fd(38)
    seth(-90)
    fd(7.5)
    pendown()
    seth(0)
    circle(66, 76)
    end_fill()
    penup()
    seth(180)
    fd(80)
    seth(-90)
    fd(33.5)
    pendown()
    seth(-15)
    fd(5)
    seth(-10)
    fd(5)
    seth(0)
    fd(5)
    seth(10)
    fd(5)
    seth(15)
    fd(5)
    seth(20)
    fd(27)
    penup()
    seth(180)
    fd(12)
    seth(-90)
    fd(21)
    pendown()
    fillcolor("#FFF8DC")
    begin_fill()
    fd(12)
    seth(180)
    fd(46)
    seth(90)
    fd(11)
    penup()
    seth(-30)
    fd(5)
    seth(-20)
    fd(5)
    seth(-10)
    fd(5)
    seth(0)
    fd(5)
    pendown()
    circle(73, 27)
    end_fill()
    penup()
    seth(-90)
    fd(6)
    seth(180)
    fd(5)
    pendown()
    fillcolor("white")
    begin_fill()
    seth(-50)
    fd(12)
    seth(-100)
    fd(30)
    seth(135)
    fd(40)
    seth(-135)
    fd(40)
    seth(100)
    fd(30)
    seth(45)
    fd(16)
    end_fill()
    fillcolor("#FFD700")
    begin_fill()
    fd(-16)
    seth(-145)
    fd(40)
    circle(20, 45)
    fd(10)
    left(10)
    fd(5)
    right(10)
    fd(10)
    left(90)
    fd(25)
    seth(85)
    fd(25)
    seth(75)
    fd(10)
    fd(-10)
    seth(85)
    fd(-25)
    seth(-90)
    fd(15)
    seth(-85)
    fd(18)
    seth(0)
    fd(95)
    circle(6, 180)
    seth(90)
    fd(30)
    seth(95)
    fd(35)
    fd(-30)
    right(90)
    fd(25)
    left(80)
    fd(6)
    left(6)
    fd(6)
    left(12)
    fd(20)
    circle(20, 60)
    fd(20)
    end_fill()
    penup()
    seth(180)
    fd(54)
    seth(90)
    fd(10)
    pendown()
    fillcolor("#FFF8DC")
    begin_fill()
    seth(-90)
    fd(10)
    seth(0)
    fd(48)
    seth(90)
    fd(10)
    end_fill()
    seth(180)
    penup()
    fd(24)
    pendown()
    circle(-160, 13)
    seth(-13)
    circle(160, 13)
    seth(0)
    circle(160, 12)
    penup()
    seth(-90)
    fd(12)
    seth(180)
    fd(3)
    pendown()
    fillcolor("white")
    begin_fill()
    seth(-100)
    fd(30)
    seth(135)
    fd(40)
    seth(-135)
    fd(40)
    seth(100)
    fd(26)
    end_fill()
    penup()
    seth(0)
    fd(20)
    seth(90)
    fd(2)
    pendown()
    seth(0)
    fd(41)
    penup()
    seth(0)
    fd(40)
    seth(-90)
    fd(53)
    pendown()
    fillcolor("#FFF8DC")
    begin_fill()
    seth(-80)
    fd(60)
    seth(-30)
    fd(5)
    seth(-40)
    fd(5)
    seth(-50)
    fd(5)
    seth(-60)
    fd(5)
    seth(-80)
    fd(5)
    seth(-90)
    fd(5)
    seth(-95)
    fd(5)
    seth(-135)
    fd(6)
    seth(-138)
    fd(6)
    seth(-143)
    fd(6)
    circle(-15, 160)
    seth(180)
    circle(20, 20)
    seth(95)
    fd(80)
    end_fill()
    penup()
    fd(-90)
    seth(0)
    fd(20)
    pendown()
    seth(-70)
    fd(10)
    fd(-10)
    penup()
    seth(0)
    fd(8)
    seth(-70)
    pendown()
    fd(7)
    fd(-7)
    penup()
    seth(0)
    fd(8)
    seth(-70)
    fd(-10)
    pendown()
    fd(13)
    penup()
    seth(180)
    fd(165)
    seth(90)
    fd(82)
    seth(-95)
    fillcolor("#FFF8DC")
    begin_fill()
    pendown()
    fd(80)
    seth(-150)
    circle(20, 190)
    seth(145)
    fd(10)
    left(90)
    fd(6)
    fd(-14)
    fd(8)
    right(90)
    fd(-7)
    seth(45)
    circle(20, 80)
    seth(85)
    fd(85)
    end_fill()

    penup()
    seth(-90)
    fd(35)
    seth(0)
    fd(3)
    pendown()
    fillcolor("#FFF8DC")
    begin_fill()
    seth(-105)
    fd(10)
    seth(-87)
    fd(70)
    seth(-90)
    fd(70)
    seth(-145)
    fd(20)
    circle(10, 160)
    seth(0)
    fd(50)
    circle(5, 110)
    fd(20)
    seth(90)
    fd(50)
    seth(87)
    fd(60)
    circle(-6, 175)
    fd(60)
    seth(-90)
    fd(50)
    seth(-120)
    fd(18)
    circle(5, 130)
    seth(0)
    fd(50)
    circle(10, 160)
    fd(16)
    seth(90)
    fd(70)
    seth(87)
    fd(80)
    end_fill()
    penup()
    seth(90)
    fd(1)
    fillcolor("#4169E1")
    begin_fill()
    pendown()
    seth(180)
    fd(96)
    seth(-105)
    fd(10)
    seth(-87)
    fd(45)
    seth(0)
    fd(43)
    seth(87)
    fd(13)
    circle(-6, 175)
    seth(-90)
    fd(15)
    seth(0)
    fd(40)
    end_fill()
    penup()
    seth(-90)
    fd(98)
    seth(180)
    fd(40)
    pendown()
    seth(-10)
    fd(15)
    seth(0)
    fd(15)
    seth(10)
    fd(15)
    penup()
    seth(180)
    fd(62)
    pendown()
    seth(-170)
    fd(15)
    seth(180)
    fd(15)
    seth(-190)
    fd(15)

    # save
    # ts = turtle.getscreen()
    # ts.getcanvas().postscript(file='doraemon_nobita.eps')

    turtle.done()


if __name__ == '__main__':
    print_the_zen_of_python()
    draw_doraemon_nobita()
